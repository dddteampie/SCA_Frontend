{"version":3,"file":"static/js/202.7c6b21ab.chunk.js","mappings":"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","sources":["pages/ProductDetailPage.js","services/productService.js","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, Spin, message, Typography, Divider, Form, Input, Button, Rate, List, Tag, Image, Carousel } from 'antd'; // Image, Carousel toegevoegd\r\nimport Container from '../common/Container'; // Zorg dat dit pad klopt\r\nimport { getProductByEAN, addReview } from '../services/productService'; // Zorg dat dit pad klopt en dat productservice.js de juiste velden voor addReview stuurt\r\n\r\nconst { Title, Paragraph, Text } = Typography; // Text toegevoegd\r\nconst { TextArea } = Input;\r\n\r\nconst ProductDetailPage = () => {\r\n    const { ean } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm(); // Ant Design form hook\r\n\r\n    // Functie om de laagste prijs te vinden uit productAanbod\r\n    const getLowestPrice = (productAanbod) => {\r\n        if (!productAanbod || productAanbod.length === 0) {\r\n            return 'N/A';\r\n        }\r\n        const prices = productAanbod.map(offer => offer.prijs);\r\n        return Math.min(...prices).toFixed(2);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ean) {\r\n            fetchProductDetails(ean);\r\n        }\r\n    }, [ean]);\r\n\r\n    const fetchProductDetails = async (productEAN) => {\r\n        setLoading(true);\r\n        try {\r\n            const fetchedProduct = await getProductByEAN(productEAN); // Haal het product op\r\n            setProduct(fetchedProduct);\r\n            // Je reviews zitten direct in het product object, dus we hoeven geen aparte state te vullen\r\n            // setReviews(fetchedProduct.Reviews || []); // Deze lijn kan weg, reviews zijn direct toegankelijk via product.reviews\r\n        } catch (error) {\r\n            message.error(\"Fout bij het laden van productdetails.\");\r\n            console.error(\"Error fetching product details:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddReview = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const reviewData = {\r\n                // Let op: Backend verwacht 'productEAN' (camelCase)\r\n                productEAN: parseInt(ean), // Zorg dat EAN een nummer is\r\n                naam: values.name, // Gebruik 'name' van het formulier\r\n                score: values.score, // Gebruik 'score' van het formulier\r\n                titel: values.title, // Gebruik 'title' van het formulier\r\n                inhoud: values.content, // Gebruik 'content' van het formulier\r\n                // gebruikerid: \"gebruiker-id-van-jwt\" // Als je dit nodig hebt van je JWT, moet je het hier toevoegen\r\n            };\r\n            await addReview(reviewData); // Roep je addReview service aan\r\n            message.success(\"Review succesvol toegevoegd!\");\r\n            form.resetFields(); // Leeg het formulier\r\n            fetchProductDetails(ean); // Herlaad productdetails om de nieuwe review te zien\r\n        } catch (error) {\r\n            message.error(`Fout bij het toevoegen van review: ${error.message || 'Onbekende fout'}`);\r\n            console.error(\"Error adding review:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container>\r\n                <Spin size=\"large\" tip=\"Productdetails laden...\" />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!product) {\r\n        return (\r\n            <Container>\r\n                <p>Product niet gevonden.</p>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {/* Hoofd Card voor productdetails */}\r\n            <Card style={{ marginBottom: '20px' }}>\r\n                <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                    {/* Afbeeldingen Carousel (optioneel, anders gewoon Image) */}\r\n                    {product.afbeeldingen && product.afbeeldingen.length > 0 ? (\r\n                        // Gebruik Carousel voor meerdere afbeeldingen, anders gewoon een Image\r\n                        product.afbeeldingen.length > 1 ? (\r\n                            <Carousel autoplay dots={{ className: 'carousel-dots' }} style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n                                {product.afbeeldingen.map((imgUrl, index) => (\r\n                                    <div key={index}>\r\n                                        <Image\r\n                                            src={imgUrl}\r\n                                            alt={`${product.naam} afbeelding ${index + 1}`}\r\n                                            style={{ maxHeight: '300px', objectFit: 'contain', width: '100%' }}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Carousel>\r\n                        ) : (\r\n                            <Image\r\n                                src={product.afbeeldingen[0]}\r\n                                alt={product.naam || 'Product afbeelding'}\r\n                                style={{ maxHeight: '300px', objectFit: 'contain', width: '100%', maxWidth: '400px' }}\r\n                            />\r\n                        )\r\n                    ) : (\r\n                        <div style={{ height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#f0f0f0', borderRadius: '8px' }}>\r\n                            <Text type=\"secondary\">Geen afbeeldingen beschikbaar</Text>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <Title level={2} style={{ textAlign: 'center' }}>{product.naam || 'Onbekend Product'}</Title>\r\n                <Paragraph style={{ textAlign: 'center' }}>EAN: {product.ean}</Paragraph>\r\n                <Paragraph style={{ textAlign: 'center' }}>Merk: {product.merk || 'N/A'}</Paragraph>\r\n\r\n                <Divider />\r\n\r\n                <Title level={3}>Omschrijving</Title>\r\n                <Paragraph>{product.omschrijving || 'Geen beschrijving beschikbaar.'}</Paragraph>\r\n\r\n                {product.gewicht > 0 && (\r\n                    <Paragraph><strong>Gewicht:</strong> {product.gewicht} kg</Paragraph>\r\n                )}\r\n\r\n                {/* Product Type */}\r\n                {product.type && (product.type.naam || product.type.omschrijving) && (\r\n                    <>\r\n                        <Title level={3}>Product Type</Title>\r\n                        <Paragraph><strong>Naam:</strong> {product.type.naam || 'N/A'}</Paragraph>\r\n                        <Paragraph><strong>Omschrijving:</strong> {product.type.omschrijving || 'N/A'}</Paragraph>\r\n                    </>\r\n                )}\r\n\r\n                {/* Categorieën */}\r\n                {product.categorieen && product.categorieen.length > 0 && (\r\n                    <>\r\n                        <Title level={3}>Categorieën</Title>\r\n                        <Paragraph>\r\n                            {product.categorieen.map((cat) => (\r\n                                <Tag key={cat.ID}>{cat.naam}</Tag>\r\n                            ))}\r\n                        </Paragraph>\r\n                    </>\r\n                )}\r\n\r\n                {/* Specificaties */}\r\n                {product.specificaties && product.specificaties.length > 0 && (\r\n                    <>\r\n                        <Title level={3}>Specificaties</Title>\r\n                        <List\r\n                            dataSource={product.specificaties}\r\n                            renderItem={(spec) => (\r\n                                <List.Item>\r\n                                    <Text strong>{spec.naam}:</Text> {spec.waarde}\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {/* Product Aanbod */}\r\n                {product.productAanbod && product.productAanbod.length > 0 && (\r\n                    <>\r\n                        <Title level={3}>Aanbod</Title>\r\n                        <Paragraph>\r\n                            <strong>Vanaf Prijs:</strong> &euro;{getLowestPrice(product.productAanbod)}\r\n                        </Paragraph>\r\n                        <List\r\n                            dataSource={product.productAanbod}\r\n                            renderItem={(offer) => (\r\n                                <List.Item>\r\n                                    <Text>Prijs: &euro;{offer.prijs.toFixed(2)}</Text>\r\n                                    <Text>Voorraad: {offer.voorraad} stuks</Text>\r\n                                    <Text>Leverancier: {offer.supplier ? offer.supplier.name : 'N/A'}</Text>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {/* Tags */}\r\n                {product.tags && product.tags.length > 0 && (\r\n                    <>\r\n                        <Title level={3}>Tags</Title>\r\n                        <Paragraph>\r\n                            {product.tags.map((tag) => (\r\n                                <Tag key={tag.id}>{tag.naam}</Tag>\r\n                            ))}\r\n                        </Paragraph>\r\n                    </>\r\n                )}\r\n            </Card>\r\n\r\n            <Divider />\r\n\r\n            {/* Reviews sectie */}\r\n            <Card title=\"Reviews\" style={{ marginTop: '20px' }}>\r\n                {product.reviews && product.reviews.length > 0 ? (\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={product.reviews} // Gebruik product.reviews direct\r\n                        renderItem={(review) => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={\r\n                                        <>\r\n                                            <Rate disabled defaultValue={review.score} />\r\n                                            <span style={{ marginLeft: 8 }}>{review.titel || 'Geen titel'}</span>\r\n                                        </>\r\n                                    }\r\n                                    description={\r\n                                        <>\r\n                                            <Paragraph>{review.inhoud || 'Geen inhoud beschikbaar.'}</Paragraph>\r\n                                            <Text type=\"secondary\">Door: {review.naam || 'Anoniem'}</Text>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                ) : (\r\n                    <Paragraph>Nog geen reviews voor dit product. Wees de eerste!</Paragraph>\r\n                )}\r\n            </Card>\r\n\r\n            {/* Review formulier */}\r\n            <Card title=\"Plaats een Review\" style={{ marginTop: '20px' }}>\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                    onFinish={handleAddReview}\r\n                >\r\n                    <Form.Item\r\n                        name=\"name\" // Naam van de reviewer\r\n                        label=\"Naam\"\r\n                        rules={[{ required: true, message: 'Vul uw naam in!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"score\" // Beoordeling\r\n                        label=\"Beoordeling\"\r\n                        rules={[{ required: true, message: 'Geef een beoordeling!' }]}\r\n                    >\r\n                        <Rate />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"title\" // Titel van de review\r\n                        label=\"Titel\"\r\n                        rules={[{ required: true, message: 'Voer een titel in!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"content\" // Inhoud van de review\r\n                        label=\"Inhoud\"\r\n                        rules={[{ required: true, message: 'Voer een opmerking in!' }]}\r\n                    >\r\n                        <TextArea rows={4} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                            Review Toevoegen\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProductDetailPage;","// productservice.js\r\nimport callApi from './api';\r\n\r\nexport const getAllProducts = async (filters = {}) => {\r\n  const params = new URLSearchParams(filters).toString();\r\n  return callApi(\"product\", `/product?${params}`);\r\n};\r\n\r\nexport const getProductByEAN = async (ean) => {\r\n  const products = await callApi(\"product\", `/product?eans=${ean}`);\r\n  return products && products.length > 0 ? products[0] : null;\r\n};\r\n\r\nexport const addReview = async (reviewData) => {\r\n  return callApi(\"product\", `/review`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(reviewData),\r\n  });\r\n};\r\n\r\n\r\n","// Map servicenamen naar hun omgevingsvariabelen\r\nconst API_URLS = {\r\n  behoefte: process.env.REACT_APP_BEHOEFTE_API_BASE_URL,\r\n  aanvraag: process.env.REACT_APP_AANVRAAG_API_BASE_URL,\r\n  product: process.env.REACT_APP_PRODUCT_API_BASE_URL,\r\n  ecd: process.env.REACT_APP_ECD_API_BASE_URL,\r\n  bestel: process.env.REACT_APP_BESTEL_API_BASE_URL,\r\n};\r\n\r\n// Functie om de juiste basis-URL op te halen\r\nconst getApiBaseUrl = (serviceName) => {\r\n  const url = API_URLS[serviceName];\r\n  if (!url) {\r\n    console.error(`ERROR: API base URL for service '${serviceName}' is not defined.`);\r\n    // Werp een fout of retourneer een fallback URL\r\n    throw new Error(`API base URL for service '${serviceName}' is not configured.`);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst callApi = async (serviceName, endpoint, options = {}) => {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    ...options.headers,\r\n  };\r\n\r\n  const baseUrl = getApiBaseUrl(serviceName); // Haal de service-specifieke URL op\r\n\r\n  const response = await fetch(`${baseUrl}${endpoint}`, {\r\n    method: options.method || 'GET',\r\n    ...options,\r\n    headers,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    let errorDetail = await response.text();\r\n    try {\r\n      console.log(\"lskdjflksdjf\", response)\r\n      const errorJson = JSON.parse(errorDetail);\r\n      errorDetail = errorJson.message || errorDetail;\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n    throw new Error(`API Error ${response.status}: ${errorDetail}`);\r\n  }\r\n\r\n  if (response.status === 204 || response.headers.get('Content-Length') === '0') {\r\n    return null;\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport default callApi;"],"names":["Title","Paragraph","Text","Typography","TextArea","Input","ProductDetailPage","ean","useParams","product","setProduct","useState","loading","setLoading","form","Form","useForm","useEffect","fetchProductDetails","async","fetchedProduct","getProductByEAN","productEAN","error","message","console","_jsx","Container","children","Spin","size","tip","_jsxs","Card","style","marginBottom","textAlign","afbeeldingen","length","Carousel","autoplay","dots","className","maxWidth","margin","map","imgUrl","index","Image","src","alt","naam","maxHeight","objectFit","width","height","display","alignItems","justifyContent","backgroundColor","borderRadius","type","level","merk","Divider","omschrijving","gewicht","_Fragment","categorieen","cat","Tag","ID","specificaties","List","dataSource","renderItem","spec","Item","strong","waarde","productAanbod","prices","offer","prijs","Math","min","toFixed","getLowestPrice","voorraad","supplier","name","tags","tag","id","title","marginTop","reviews","itemLayout","review","Meta","Rate","disabled","defaultValue","score","marginLeft","titel","description","inhoud","layout","onFinish","reviewData","parseInt","values","content","addReview","success","resetFields","label","rules","required","rows","Button","htmlType","getAllProducts","params","URLSearchParams","arguments","undefined","toString","callApi","products","method","headers","body","JSON","stringify","API_URLS","behoefte","process","aanvraag","ecd","bestel","serviceName","endpoint","options","baseUrl","url","Error","getApiBaseUrl","response","fetch","ok","errorDetail","text","log","parse","e","status","get","json"],"sourceRoot":""}