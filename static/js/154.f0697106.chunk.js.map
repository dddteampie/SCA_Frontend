{"version":3,"file":"static/js/154.f0697106.chunk.js","mappings":"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","sources":["services/behoefteService.js","services/api.js","pages/BehoeftebepalingPage.js","../node_modules/antd/es/divider/index.js"],"sourcesContent":["import callApi from './api';\r\n\r\nexport const addBehoefte = async (behoefteData) => {\r\n  return callApi(\"behoefte\", '/behoefte', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(behoefteData),\r\n  });\r\n};\r\n\r\nexport const startCategorieAanvraag = async (inputData) => {\r\n  return callApi(\"aanvraag\", '/aanvraag/categorie', {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(inputData),\r\n  });\r\n};\r\n\r\nexport const getPassendeCategorieenLijst = async (clientId) => {\r\n  return callApi(\"aanvraag\", `/aanvraag/recommendatie/categorie/?patientId=${clientId}`);\r\n};\r\n\r\nexport const kiesCategorie = async (inputData) => {\r\n  return callApi(\"aanvraag\", '/aanvraag/categorie/kies', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(inputData),\r\n  });\r\n};\r\n\r\nexport const startProductAanvraag = async (inputData) => {\r\n  return callApi(\"aanvraag\", '/aanvraag/product', {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(inputData),\r\n  });\r\n};\r\n\r\nexport const getPassendeProductenLijst = async (clientId) => {\r\n  return callApi(\"aanvraag\", `/aanvraag/recommendatie/product/?clientId=${clientId}`);\r\n};\r\n\r\nexport const getZorgdossierByClientId = async (clientId) => {\r\n    try {\r\n        const response = await callApi(\"ecd\", `/api/zorgdossier/client/${clientId}`);\r\n        return response && response.id ? response : null;\r\n    } catch (error) {\r\n        console.error(\"Error fetching zorgdossier:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getOnderzoekByDossierId = async (zorgdossierId) => {\r\n    try {\r\n        const response = await callApi(\"ecd\", `/api/onderzoek/dossier/${zorgdossierId}`);\r\n        return response || null;\r\n    } catch (error) {\r\n        console.error(\"Error fetching onderzoek by dossier ID:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getOnderzoekByOnderzoekId = async (zorgdossierId) => {\r\n    try {\r\n        const response = await callApi(\"ecd\", `/api/onderzoek/${zorgdossierId}`);\r\n        return response && response.length > 0 ? response[0] : null;\r\n    } catch (error) {\r\n        console.error(\"Error fetching onderzoek by zorgdossier ID:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const createZorgdossier = async (zorgdossierData) => {\r\n    return await callApi(\"behoefte\", \"/ecd/zorgdossier\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(zorgdossierData),\r\n    });\r\n};\r\n\r\nexport const createOnderzoek = async (onderzoekData) => {\r\n    return await callApi(\"behoefte\", \"/ecd/onderzoek\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(onderzoekData),\r\n    });\r\n};\r\n\r\nexport const createDiagnose = async (onderzoekId, data) => {\r\n  return callApi(\"behoefte\", `/ecd/onderzoek/${onderzoekId}/diagnose`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\nexport const kiesProduct = async (inputData) => {\r\n  return callApi(\"aanvraag\", '/aanvraag/product/kies', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(inputData),\r\n  });\r\n};\r\n\r\nexport const getClient = async (clientId) => {\r\n    try {\r\n        const response = await callApi(\"ecd\", `/api/client/${clientId}`);\r\n        return response;\r\n    } catch (error) {\r\n        console.error(`Error fetching client with ID ${clientId}:`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getBehoeftenByClientId = async (clientId) => {\r\n  return callApi(\"behoefte\", `/behoefte/client/${clientId}`);\r\n};\r\n\r\nexport const startAanvraag = async (aanvraagData, behoefteId) => {\r\n  console.log(aanvraagData, behoefteId)\r\n  return callApi(\"behoefte\", `/behoefte/${behoefteId}/aanvraagverwerking`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(aanvraagData),\r\n  });\r\n};\r\n\r\nexport const getAanvragenByClientId = async (clientId) => {\r\n  return callApi(\"aanvraag\", `/aanvraag/client/${clientId}`);\r\n};","// Map servicenamen naar hun omgevingsvariabelen\r\nconst API_URLS = {\r\n  behoefte: process.env.REACT_APP_BEHOEFTE_API_BASE_URL,\r\n  aanvraag: process.env.REACT_APP_AANVRAAG_API_BASE_URL,\r\n  product: process.env.REACT_APP_PRODUCT_API_BASE_URL,\r\n  ecd: process.env.REACT_APP_ECD_API_BASE_URL, \r\n};\r\n\r\n// Functie om de juiste basis-URL op te halen\r\nconst getApiBaseUrl = (serviceName) => {\r\n  const url = API_URLS[serviceName];\r\n  if (!url) {\r\n    console.error(`ERROR: API base URL for service '${serviceName}' is not defined.`);\r\n    // Werp een fout of retourneer een fallback URL\r\n    throw new Error(`API base URL for service '${serviceName}' is not configured.`);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst callApi = async (serviceName, endpoint, options = {}) => {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    ...options.headers,\r\n  };\r\n\r\n  const baseUrl = getApiBaseUrl(serviceName); // Haal de service-specifieke URL op\r\n\r\n  const response = await fetch(`${baseUrl}${endpoint}`, {\r\n    method: options.method || 'GET',\r\n    ...options,\r\n    headers,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    let errorDetail = await response.text();\r\n    try {\r\n      console.log(\"lskdjflksdjf\", response)\r\n      const errorJson = JSON.parse(errorDetail);\r\n      errorDetail = errorJson.message || errorDetail;\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n    throw new Error(`API Error ${response.status}: ${errorDetail}`);\r\n  }\r\n\r\n  if (response.status === 204 || response.headers.get('Content-Length') === '0') {\r\n    return null;\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport default callApi;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { Button, Input, List, Card, Spin, message, Form, Typography, Select, Divider } from 'antd';\r\nimport Container from '../common/Container';\r\nimport {\r\n    getBehoeftenByClientId,\r\n    addBehoefte,\r\n    startCategorieAanvraag,\r\n    getPassendeCategorieenLijst,\r\n    kiesCategorie,\r\n    getZorgdossierByClientId,\r\n    getOnderzoekByDossierId,\r\n    // New functions for aanvraag and product flows\r\n    startAanvraag,\r\n    getAanvragenByClientId as fetchAanvragenByClientId, // Renamed to avoid conflict\r\n    startProductAanvraag,\r\n    getPassendeProductenLijst,\r\n    kiesProduct,\r\n} from '../services/behoefteService'; // Assuming new functions are added here\r\n\r\nconst { Title, Paragraph } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst BehoeftebepalingPage = () => {\r\n    const { clientId } = useParams();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [zorgdossierId, setZorgdossierId] = useState(null);\r\n    const [onderzoekId, setOnderzoekId] = useState(null);\r\n    const [behoeften, setBehoeften] = useState([]);\r\n    const [aanvragen, setAanvragen] = useState([]); // New state for aanvragen\r\n    const [loading, setLoading] = useState(true);\r\n    const [form] = Form.useForm();\r\n    const [selectedAanvraag, setSelectedAanvraag] = useState(null); // New state for selected aanvraag\r\n    const [categorieen, setCategorieen] = useState([]);\r\n    const [producten, setProducten] = useState([]); // New state for recommended products\r\n\r\n    // Function to load necessary IDs and fetch behoeften and aanvragen\r\n    const loadData = useCallback(async () => {\r\n        setLoading(true);\r\n        let currentZorgdossierId = null;\r\n        let currentOnderzoekId = null;\r\n\r\n        if (location.state && location.state.zorgdossierId && location.state.onderzoekId) {\r\n            currentZorgdossierId = location.state.zorgdossierId;\r\n            currentOnderzoekId = location.state.onderzoekId;\r\n        } else {\r\n            message.warning(\"Navigatiestate leeg. Probeer benodigde ID's via API op te halen...\");\r\n            try {\r\n                const zorgdossier = await getZorgdossierByClientId(clientId);\r\n                if (zorgdossier && zorgdossier.id) {\r\n                    currentZorgdossierId = zorgdossier.id;\r\n                    const onderzoek = await getOnderzoekByDossierId(currentZorgdossierId);\r\n                    if (onderzoek && onderzoek.id) {\r\n                        currentOnderzoekId = onderzoek.id;\r\n                    } else {\r\n                        message.error(\"Geen gekoppeld onderzoek gevonden bij dit zorgdossier.\");\r\n                    }\r\n                } else {\r\n                    message.error(\"Geen zorgdossier gevonden voor deze cliënt.\");\r\n                }\r\n            } catch (error) {\r\n                message.error(\"Fout bij het ophalen van zorgdossier of gekoppeld onderzoek.\");\r\n                console.error(\"Error loading IDs for BehoeftebepalingPage:\", error);\r\n            }\r\n        }\r\n\r\n        setZorgdossierId(currentZorgdossierId);\r\n        setOnderzoekId(currentOnderzoekId);\r\n\r\n        if (currentOnderzoekId) {\r\n            try {\r\n                const fetchedBehoeften = await getBehoeftenByClientId(clientId);\r\n                setBehoeften(fetchedBehoeften);\r\n                message.success(\"Behoeften succesvol geladen.\");\r\n            } catch (error) {\r\n                message.info(\"Geen behoeften gevonden voor dit onderzoek.\");\r\n                console.error(\"Error fetching behoeften:\", error);\r\n                setBehoeften([]);\r\n            }\r\n\r\n            try {\r\n                const fetchedAanvragen = await fetchAanvragenByClientId(clientId); // Use the new fetch\r\n                setAanvragen(fetchedAanvragen);\r\n                message.success(\"Aanvragen succesvol geladen.\");\r\n            } catch (error) {\r\n                message.info(\"Geen aanvragen gevonden voor deze cliënt.\");\r\n                console.error(\"Error fetching aanvragen:\", error);\r\n                setAanvragen([]);\r\n            }\r\n        } else {\r\n            message.info(\"Geen geldig Onderzoek ID beschikbaar om behoeften en aanvragen te laden.\");\r\n            setBehoeften([]);\r\n            setAanvragen([]);\r\n        }\r\n        setLoading(false);\r\n    }, [clientId, location.state]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    const handleAddBehoefte = async (values) => {\r\n        const { titel, beschrijving, urgentie } = values;\r\n\r\n        if (!titel.trim() || !beschrijving.trim()) {\r\n            message.warning(\"Vul zowel de titel als de beschrijving in voor de behoefte.\");\r\n            return;\r\n        }\r\n        if (!onderzoekId) {\r\n            message.error(\"Kan geen behoefte toevoegen: Onderzoek ID ontbreekt. Ververs de pagina of ga terug naar cliëntdetails.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const newBehoefteData = {\r\n                onderzoek_id: onderzoekId,\r\n                client_id: clientId,\r\n                titel: titel,\r\n                beschrijving: beschrijving,\r\n                urgentie: urgentie,\r\n            };\r\n            console.log(\"Adding behoefte with data:\", newBehoefteData);\r\n            await addBehoefte(newBehoefteData);\r\n            form.resetFields();\r\n            message.success(\"Behoefte succesvol toegevoegd.\");\r\n            await loadData(); // Reload all data\r\n        } catch (error) {\r\n            message.error(\"Fout bij het toevoegen van behoefte: \" + (error.message || error));\r\n            console.error(\"Error adding behoefte:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleStartAanvraag = async (behoefte) => {\r\n        setLoading(true);\r\n        try {\r\n            // Need client data for StartAanvraag handler. Assuming `behoefte` object has `client_id`.\r\n            // In a real app, you might fetch client details or pass them from a parent context.\r\n            const clientData = { id: clientId }; // Simplified client object for the payload\r\n            const aanvraagPayload = {\r\n                client: clientData,\r\n                behoefte: behoefte,\r\n            };\r\n            console.log(aanvraagPayload, behoefte.id);\r\n            const newAanvraag = await startAanvraag(aanvraagPayload, behoefte.id);\r\n            message.success(`Aanvraag voor behoefte \"${behoefte.titel}\" succesvol gestart.`);\r\n            setSelectedAanvraag(newAanvraag); // Set the newly created aanvraag as selected\r\n            await loadData(); // Reload aanvragen list\r\n        } catch (error) {\r\n            message.error(\"Fout bij het starten van de aanvraag: \" + (error.message || error));\r\n            console.error(\"Error starting aanvraag:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\nconst handleStartCategorieAanvraag = async (aanvraagToProcess) => {\r\n    setSelectedAanvraag(aanvraagToProcess);\r\n    setLoading(true);\r\n\r\n    // Add a check to ensure `behoefte` exists on the `aanvraagToProcess` object\r\n    if (!aanvraagToProcess.Behoefte || !aanvraagToProcess.Behoefte.beschrijving) {\r\n        message.error(\"Beschrijving van de behoefte ontbreekt voor deze aanvraag. Kan geen categorie advies starten.\");\r\n        setLoading(false);\r\n        return;\r\n    }\r\n\r\n    try {\r\n        console.log(aanvraagToProcess.Behoefte)\r\n        const inputData = {\r\n            patientId: aanvraagToProcess.client_id,\r\n            budget: aanvraagToProcess.budget || 20000,\r\n            behoeften: aanvraagToProcess.Behoefte.beschrijving,\r\n        };\r\n        console.log(inputData)\r\n        await startCategorieAanvraag(inputData);\r\n        // Only show success if no error is thrown\r\n        message.success(\"Categorie-aanvraag gestart. Categorieën ophalen...\");\r\n\r\n        const response = await getPassendeCategorieenLijst(aanvraagToProcess.client_id);\r\n        if (response?.categories) {\r\n            setCategorieen(response.categories);\r\n            message.success(\"Categorieën succesvol opgehaald.\");\r\n        } else {\r\n            message.warning(\"Geen categorieën gevonden in het antwoord.\");\r\n            setCategorieen([]);\r\n        }\r\n        await loadData();\r\n    } catch (error) {\r\n        message.error(\"Fout bij opvragen categorie aanbeveling: \" + (error.message || error));\r\n        console.error(\"Error starting category request:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n    const handleKiesCategorie = async (categorieId) => {\r\n        if (!selectedAanvraag) {\r\n            message.error(\"Geen aanvraag geselecteerd voor categoriekeuze.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const inputData = {\r\n                client_id: selectedAanvraag.client_id,\r\n                behoefte_id: selectedAanvraag.behoefte_id,\r\n                categorie: categorieId,\r\n            };\r\n            await kiesCategorie(inputData);\r\n            message.success(`Categorie ${categorieId} gekozen voor aanvraag ${selectedAanvraag.id}.`);\r\n            await loadData(); // Refresh aanvragen to show updated status\r\n            // Optionally, clear categories and prepare for product recommendation\r\n            setCategorieen([]);\r\n            setSelectedAanvraag({ ...selectedAanvraag, GekozenCategorieID: categorieId }); // Update selected Aanvraag locally\r\n        } catch (error) {\r\n            message.error(\"Fout bij het kiezen van categorie: \" + (error.message || error));\r\n            console.error(\"Error choosing category:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleStartProductAanvraag = async (aanvraagToProcess) => {\r\n        setSelectedAanvraag(aanvraagToProcess); // Ensure the correct aanvraag is selected\r\n        setLoading(true);\r\n        try {\r\n            if (!aanvraagToProcess.gekozen_categorie_id) {\r\n                message.warning(\"Er is nog geen categorie gekozen voor deze aanvraag.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const inputData = {\r\n                clientId: aanvraagToProcess.client_id,\r\n                budget: aanvraagToProcess.budget || 20000,\r\n                behoeften: aanvraagToProcess.Behoefte.beschrijving,\r\n                CategorieID: aanvraagToProcess.gekozen_categorie_id,\r\n            };\r\n            console.log(JSON.stringify(inputData));\r\n            await startProductAanvraag(inputData);\r\n            message.success(\"Product-aanvraag gestart. Producten ophalen...\");\r\n\r\n            const response = await getPassendeProductenLijst(aanvraagToProcess.client_id);\r\n            setProducten(response.products);\r\n            message.success(\"Producten succesvol opgehaald.\");\r\n            await loadData(); // Refresh aanvragen to show updated status\r\n        } catch (error) {\r\n            message.error(\"Fout bij opvragen product aanbeveling: \" + (error.message || error));\r\n            console.error(\"Error starting product request:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleKiesProduct = async (productEAN) => {\r\n        if (!selectedAanvraag) {\r\n            message.error(\"Geen aanvraag geselecteerd voor productkeuze.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const inputData = {\r\n                client_id: selectedAanvraag.client_id,\r\n                behoefte_id: selectedAanvraag.behoefte_id,\r\n                product_ean: productEAN,\r\n            };\r\n            await kiesProduct(inputData);\r\n            message.success(`Product met EAN ${productEAN} gekozen voor aanvraag ${selectedAanvraag.id}.`);\r\n            await loadData(); // Refresh aanvragen to show updated status\r\n            setProducten([]); // Clear product list\r\n            setSelectedAanvraag(null); // Clear selected aanvraag as workflow is complete\r\n        } catch (error) {\r\n            message.error(\"Fout bij het kiezen van product: \" + (error.message || error));\r\n            console.error(\"Error choosing product:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container>\r\n                <Spin size=\"large\" tip=\"Gegevens laden...\" />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!zorgdossierId || !onderzoekId) {\r\n        return (\r\n            <Container>\r\n                <Title level={3}>Fout: Zorgdossier of Onderzoek ID ontbreekt.</Title>\r\n                <Paragraph>Controleer of de cliënt, het zorgdossier en het onderzoek correct zijn aangemaakt. Dit kan gebeuren na een paginaverversing als de benodigde gegevens niet direct via de URL beschikbaar zijn. Ga terug naar de cliëntdetails om dit te controleren.</Paragraph>\r\n                <Button onClick={() => history.push(`/clients/${clientId}`)}>Terug naar Cliëntdetails</Button>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title level={1}>Behoeften en Aanvragen voor Cliënt: {clientId}</Title>\r\n            <Paragraph>Huidig Zorgdossier ID: **{zorgdossierId}**</Paragraph>\r\n            <Paragraph>Huidig Onderzoek ID: **{onderzoekId}**</Paragraph>\r\n\r\n            <Card title=\"Nieuwe Behoefte Toevoegen\" style={{ marginBottom: '20px' }}>\r\n                <Form form={form} layout=\"vertical\" onFinish={handleAddBehoefte}>\r\n                    <Form.Item\r\n                        label=\"Titel Behoefte\"\r\n                        name=\"titel\"\r\n                        rules={[{ required: true, message: 'Vul een titel in voor de behoefte!' }]}\r\n                    >\r\n                        <Input placeholder=\"Bijv. Lopen, Eten, Sociale Interactie\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Beschrijving Behoefte\"\r\n                        name=\"beschrijving\"\r\n                        rules={[{ required: true, message: 'Vul een beschrijving in voor de behoefte!' }]}\r\n                    >\r\n                        <Input.TextArea\r\n                            rows={4}\r\n                            placeholder=\"Bijv. Patiënt wil leren lopen na val\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Urgentie\"\r\n                        name=\"urgentie\"\r\n                        initialValue=\"Laag\"\r\n                        rules={[{ required: true, message: 'Selecteer de urgentie!' }]}\r\n                    >\r\n                        <Select placeholder=\"Selecteer urgentie\">\r\n                            <Option value=\"Laag\">Laag</Option>\r\n                            <Option value=\"Normaal\">Normaal</Option>\r\n                            <Option value=\"Hoog\">Hoog</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Behoefte Toevoegen\r\n                    </Button>\r\n                </Form>\r\n            </Card>\r\n\r\n            <Divider />\r\n\r\n            <Card title=\"Bestaande Behoeften\" style={{ marginBottom: '20px' }}>\r\n                <List\r\n                    bordered\r\n                    dataSource={behoeften}\r\n                    renderItem={(behoefte) => (\r\n                        <List.Item\r\n                            actions={[\r\n                                <Button\r\n                                    key=\"start-aanvraag\"\r\n                                    onClick={() => handleStartAanvraag(behoefte)}\r\n                                    disabled={loading || aanvragen.some(a => a.behoefte_id === behoefte.id)}\r\n                                >\r\n                                    Start Aanvraag\r\n                                </Button>,\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={behoefte.titel ? behoefte.titel : behoefte.beschrijving}\r\n                                description={\r\n                                    <>\r\n                                        <Paragraph>Beschrijving: {behoefte.beschrijving}</Paragraph>\r\n                                        <Paragraph>Urgentie: {behoefte.urgentie || 'Niet gespecificeerd'}</Paragraph>\r\n                                        <Paragraph>Status: {behoefte.status || 'Niet gespecificeerd'} | Datum: {new Date(behoefte.datum).toLocaleDateString()}</Paragraph>\r\n                                    </>\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Card>\r\n\r\n            <Divider />\r\n\r\n            <Card title=\"Bestaande Aanvragen\" style={{ marginBottom: '20px' }}>\r\n                <List\r\n                    bordered\r\n                    dataSource={aanvragen}\r\n                    renderItem={(aanvraag) => (\r\n                        <List.Item\r\n                            actions={[\r\n                                // Only show \"Vraag Categorie Advies\" if no category is chosen yet and it's not waiting for a category choice\r\n                                (!aanvraag.gekozen_categorie_id && aanvraag.status !== 1) && (\r\n                                    <Button\r\n                                        key=\"advies\"\r\n                                        onClick={() => handleStartCategorieAanvraag(aanvraag)}\r\n                                        loading={loading && selectedAanvraag?.id === aanvraag.id}\r\n                                    >\r\n                                        Vraag Categorie Advies\r\n                                    </Button>\r\n                                ),\r\n                                // Show \"Vraag Product Advies\" if a category is chosen and no product is chosen yet\r\n                                (aanvraag.gekozen_categorie_id && !aanvraag.gekozen_product_id && aanvraag.status !== 2) && (\r\n                                    <Button\r\n                                        key=\"product-advies\"\r\n                                        onClick={() => handleStartProductAanvraag(aanvraag)}\r\n                                        loading={loading && selectedAanvraag?.id === aanvraag.id}\r\n                                    >\r\n                                        Vraag Product Advies\r\n                                    </Button>\r\n                                ),\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={`Aanvraag voor: ${aanvraag.Behoefte?.titel || aanvraag.Behoefte?.beschrijving || 'Onbekende Behoefte'}`}\r\n                                description={\r\n                                    <>\r\n                                        <Paragraph>Aanvraag ID: {aanvraag.id}</Paragraph>\r\n                                        <Paragraph>Behoefte ID: {aanvraag.behoefte_id}</Paragraph>\r\n                                        <Paragraph>Status: **{aanvraag.StatusString || aanvraag.status}**</Paragraph>\r\n                                        <Paragraph>Budget: €{aanvraag.budget ? aanvraag.budget.toFixed(2) : 'N.v.t.'}</Paragraph>\r\n                                        {aanvraag.gekozen_categorie_id && <Paragraph>Gekozen Categorie ID: {aanvraag.gekozen_categorie_id}</Paragraph>}\r\n                                        {aanvraag.gekozen_product_id && <Paragraph>Gekozen Product EAN: {aanvraag.gekozen_product_id}</Paragraph>}\r\n                                    </>\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Card>\r\n\r\n            {categorieen.length > 0 && selectedAanvraag && (\r\n                <Card title={`Gevonden Categorieën voor Aanvraag: ${selectedAanvraag.id}`} style={{ marginTop: '20px' }}>\r\n                    <List\r\n                        bordered\r\n                        dataSource={categorieen}\r\n                        renderItem={(categorie) => (\r\n                            <List.Item\r\n                                actions={[\r\n                                    <Button key=\"select-cat\" onClick={() => handleKiesCategorie(categorie.id)}>\r\n                                        Kies deze Categorie\r\n                                    </Button>,\r\n                                ]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    title={categorie.naam}\r\n                                    description={`ID: ${categorie.id}`}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Card>\r\n            )}\r\n\r\n            {producten.length > 0 && selectedAanvraag?.gekozen_categorie_id && (\r\n                <Card title={`Gevonden Producten voor Aanvraag: ${selectedAanvraag.id} (Categorie: ${selectedAanvraag.gekozen_categorie_id})`} style={{ marginTop: '20px' }}>\r\n                    <List\r\n                        bordered\r\n                        dataSource={producten}\r\n                        renderItem={(product) => (\r\n                            <List.Item\r\n                                actions={[\r\n                                    <Button key=\"select-product\" onClick={() => handleKiesProduct(product.ean)}>\r\n                                        Kies dit Product\r\n                                    </Button>,\r\n                                ]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    title={product.naam}\r\n                                    description={\r\n                                        <>\r\n                                            <Paragraph>EAN: {product.ean}</Paragraph>\r\n                                            <Paragraph>Prijs: €{product.prijs ? product.prijs.toFixed(2) : 'N.v.t.'}</Paragraph>\r\n                                            <Paragraph>Beschrijving: {product.beschrijving}</Paragraph>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default BehoeftebepalingPage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nvar Divider = function Divider(props) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var customizePrefixCls = props.prefixCls,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'horizontal' : _props$type,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n    orientationMargin = props.orientationMargin,\n    className = props.className,\n    children = props.children,\n    dashed = props.dashed,\n    plain = props.plain,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n  var prefixCls = getPrefixCls('divider', customizePrefixCls);\n  var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n  var hasChildren = !!children;\n  var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-with-text\"), hasChildren), \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), \"\".concat(prefixCls, \"-dashed\"), !!dashed), \"\".concat(prefixCls, \"-plain\"), !!plain), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), className);\n  var innerStyle = _extends(_extends({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'Divider', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner-text\"),\n    style: innerStyle\n  }, children)));\n};\nexport default Divider;"],"names":["addBehoefte","async","callApi","method","headers","body","JSON","stringify","behoefteData","startCategorieAanvraag","inputData","getPassendeCategorieenLijst","clientId","kiesCategorie","startProductAanvraag","getPassendeProductenLijst","getZorgdossierByClientId","response","id","error","console","getOnderzoekByDossierId","zorgdossierId","createZorgdossier","zorgdossierData","createOnderzoek","onderzoekData","createDiagnose","onderzoekId","data","kiesProduct","getClient","getBehoeftenByClientId","startAanvraag","aanvraagData","behoefteId","log","getAanvragenByClientId","API_URLS","behoefte","process","aanvraag","product","ecd","serviceName","endpoint","options","arguments","length","undefined","baseUrl","url","Error","getApiBaseUrl","fetch","ok","errorDetail","text","parse","message","e","status","get","json","Title","Paragraph","Typography","Option","Select","BehoeftebepalingPage","useParams","history","useHistory","location","useLocation","setZorgdossierId","useState","setOnderzoekId","behoeften","setBehoeften","aanvragen","setAanvragen","loading","setLoading","form","Form","useForm","selectedAanvraag","setSelectedAanvraag","categorieen","setCategorieen","producten","setProducten","loadData","useCallback","currentZorgdossierId","currentOnderzoekId","state","warning","zorgdossier","onderzoek","fetchedBehoeften","success","info","fetchedAanvragen","fetchAanvragenByClientId","useEffect","_jsx","Container","children","Spin","size","tip","_jsxs","level","Card","title","style","marginBottom","layout","onFinish","titel","beschrijving","urgentie","values","trim","newBehoefteData","onderzoek_id","client_id","resetFields","Item","label","name","rules","required","Input","placeholder","TextArea","rows","initialValue","value","Button","type","htmlType","Divider","List","bordered","dataSource","renderItem","actions","onClick","aanvraagPayload","client","newAanvraag","handleStartAanvraag","disabled","some","a","behoefte_id","Meta","description","_Fragment","Date","datum","toLocaleDateString","_aanvraag$Behoefte","_aanvraag$Behoefte2","gekozen_categorie_id","aanvraagToProcess","Behoefte","patientId","budget","categories","handleStartCategorieAanvraag","gekozen_product_id","CategorieID","products","handleStartProductAanvraag","StatusString","toFixed","marginTop","categorie","categorieId","GekozenCategorieID","handleKiesCategorie","naam","product_ean","productEAN","handleKiesProduct","ean","prijs","push","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","props","_React$useContext","React","ConfigContext","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","orientationMargin","className","dashed","plain","restProps","orientationPrefix","concat","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","_defineProperty","innerStyle","_extends","marginLeft","marginRight","role"],"sourceRoot":""}